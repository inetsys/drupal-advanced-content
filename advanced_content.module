<?php

/** Implementation of hook_init */
function advanced_content_init(){
	// Disable view menu_existing_content_selection if module content_menu is active
	$defaults = variable_get('views_defaults', array());
	if(module_exists('content_menu') && (!isset($defaults['menu_existing_content_selection']) || !$defaults['menu_existing_content_selection'])){
		$defaults['menu_existing_content_selection'] = true;
		variable_set('views_defaults', $defaults);
	}
	// Init filters for admin content page
	if(current_path() == 'admin/content'){
		module_load_include('inc', 'advanced_content');
		$default_filters = _advanced_content_get_default_filters();
	}
}

/** Implements hook_permission() */
function advanced_content_permission(){
	$perms = array();

	foreach(node_type_get_types() as $type => $data){
		$perms['advanced content view unpublished content of '.$type] = array(
			'title' => t('View unpublished content of type %type', array('%type' => $data->name)),
		);

		$perms['advanced content set published flag in '.$type] = array(
			'title' => t('Set published flag in %type nodes', array('%type' => $data->name)),
		);
		$perms['advanced content set promoted flag in '.$type] = array(
			'title' => t('Set promoted flag in %type nodes', array('%type' => $data->name)),
		);
		$perms['advanced content set sticky flag in '.$type] = array(
			'title' => t('Set sticky flag in %type nodes', array('%type' => $data->name)),
		);
	}

	return $perms;
}

/** Implementation of hook_menu */
function advanced_content_menu(){
	$items = array();

	if(module_exists('content_menu')){
		$items['admin/structure/menu/manage/add_existing_content'] = array(
			'title' => 'Select existing content',
			'access arguments' => array('administer content'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('_advanced_content_select_content'),
			'file' => 'advanced_content.admin.inc'
		);
	}

	return $items;
}

/** Implementation of hook_menu_alter */
function advanced_content_menu_alter(&$items){
	$items['admin/content']['page arguments'] = array('_advanced_content_admin_page');
	$items['admin/content']['file'] = 'advanced_content.admin.inc';
	$items['admin/content']['file path'] = drupal_get_path('module', 'advanced_content');
}

/** Implementation of hook_node_filter */
function advanced_content_node_filter($default_filters = array()){
	$type_options = array_merge(array('' => '-'), node_type_get_names());
	$published_options = array(
		'' => '-',
		0 => t('No'),
		1 => t('Yes')
	);

	return 	array(
		'type' => array(
			'#type' => 'select',
			'#title' => t('Content type'),
			'#options' => $type_options,
			'#default_value' => isset($default_filters['type']) ? $default_filters['type'] : '',
		),
		'status' => array(
			'#type' => 'select',
			'#title' => t('Published'),
			'#options' => $published_options,
			'#default_value' => isset($default_filters['status']) ? $default_filters['status'] : '',
		),
		'title' => array(
			'#type' => 'textfield',
			'#title' => t('Title'),
			'#default_value' => isset($default_filters['title']) ? $default_filters['title'] : ''
		),
	);
}

/** Implements hook_query_TAG_alter
 * Tag: node_admin_filter
 */
function advanced_content_query_node_admin_filter_alter($query){
	// Node access conditions
	if(!user_access('bypass node access')){
		$conditions = db_or();
		foreach(node_type_get_types() as $type => $data){
			if(user_access('advanced content view unpublished content of '.$type)){
				$conditions->condition(db_and()
					->condition('n.status', NODE_NOT_PUBLISHED)
					->condition('n.type', $type)
				);
			}
		}

		if(user_access('view own unpublished content')){
			global $user;
			$conditions->condition(db_or()
				->condition('n.status', NODE_PUBLISHED)
				->condition('n.uid', $user->uid)
			);
		}else{
			// If not, restrict the query to published nodes.
			$conditions->condition('n.status', NODE_PUBLISHED);
		}
		$query->condition($conditions);
	}

	// Node properties filter
	if(isset($_SESSION['admin_node_filters'])){
		if(isset($_SESSION['admin_node_filters']['type'])){
			$query->condition('n.type', $_SESSION['admin_node_filters']['type']);
		}
		if(isset($_SESSION['admin_node_filters']['status'])){
			$query->condition('n.status', $_SESSION['admin_node_filters']['status']);
		}
		if(isset($_SESSION['admin_node_filters']['title'])){
			$query->condition('n.title', '%'.$_SESSION['admin_node_filters']['title'].'%', 'LIKE');
		}
	}
}

/** Implements hook_form_alter() */
function advanced_content_form_alter(&$form, &$form_state, $form_id){
	foreach(node_type_get_types() as $type => $data){
		if($form_id == $type.'_node_form'){
			$form['options']['#access'] = user_access('administer content') || user_access('advanced content set published flag in '.$type) || user_access('advanced content set promoted flag in '.$type) || user_access('advanced content set sticky flag in '.$type);

			$form['options']['status']['#access'] = user_access('administer content') || user_access('advanced content set published flag in '.$type);
			$form['options']['promote']['#access'] = user_access('administer content') || user_access('advanced content set promoted flag in '.$type);
			$form['options']['sticky']['#access'] = user_access('administer content') || user_access('advanced content set sticky flag in '.$type);
		}
	}
}
